name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-14
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}  # GH_TOKEN olarak tanımlandı

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rosetta and dependencies
        run: |
          softwareupdate --install-rosetta --agree-to-license
          brew install openssl rust git gh

      - name: Build Rust debug
        run: |
          cargo build
          cp target/debug/ktp target/debug/ktp-0.1.0-debug-macos-arm

      - name: Build Rust release
        run: |
          cargo build --release
          cp target/release/ktp target/release/ktp-0.1.0-macos-arm

      - id: create_release
        name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Burada da GITHUB_TOKEN olarak geçiyor, GH_TOKEN otomatik kullanılacaktır
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ARM (M1/M2) build
          draft: false
          prerelease: false

      - name: Upload Debug Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/debug/ktp-0.1.0-debug-macos-arm
          asset_name: ktp-0.1.0-debug-macos-arm
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/ktp-0.1.0-macos-arm
          asset_name: ktp-0.1.0-macos-arm
          asset_content_type: application/octet-stream
